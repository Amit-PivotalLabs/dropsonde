// Code generated by protoc-gen-gogo.
// source: log.proto
// DO NOT EDIT!

package events

import proto "code.google.com/p/gogoprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type LogLine struct {
	Timestamp        *int64  `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	Payload          []byte  `protobuf:"bytes,2,req,name=payload" json:"payload,omitempty"`
	Pid              *uint32 `protobuf:"varint,3,opt,name=pid" json:"pid,omitempty"`
	Severity         *uint32 `protobuf:"varint,4,opt,name=severity" json:"severity,omitempty"`
	AppId            *string `protobuf:"bytes,5,opt,name=app_id" json:"app_id,omitempty"`
	SourceName       *string `protobuf:"bytes,6,opt,name=source_name" json:"source_name,omitempty"`
	Hostname         *string `protobuf:"bytes,7,opt,name=hostname" json:"hostname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogLine) Reset()         { *m = LogLine{} }
func (m *LogLine) String() string { return proto.CompactTextString(m) }
func (*LogLine) ProtoMessage()    {}

func (m *LogLine) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *LogLine) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *LogLine) GetPid() uint32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *LogLine) GetSeverity() uint32 {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return 0
}

func (m *LogLine) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *LogLine) GetSourceName() string {
	if m != nil && m.SourceName != nil {
		return *m.SourceName
	}
	return ""
}

func (m *LogLine) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func init() {
}
